name: Version Update and Release

# ワークフローの処理の流れ:
# 1. トリガー条件:
#    - 手動実行（workflow_dispatch）
# 2. 環境のセットアップ（Ubuntu、Python、Poetry）
# 3. 現在のバージョンの取得
# 4. 新しいバージョンへの更新（patch、minor、またはmajor）
# 5. 変更のコミットとプッシュ
# 6. 新しいタグの作成とプッシュ
# 7. 変更ログの生成
# 8. GitHubリリースの作成
#    - gh-releaseアクション使用
#      URL: https://github.com/marketplace/actions/gh-release)

on:
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of version update'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  update-version-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Get current version
        id: current_version
        run: echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Update version
        id: update_version
        run: |
          poetry version ${{ github.event.inputs.update_type }}
          echo "new_version=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Commit and push if changed
        run: |
          git add pyproject.toml
          git commit -m ":wrench:Bump version to ${{ steps.update_version.outputs.new_version }}" || echo "No changes to commit"
          git push
      - name: Create and push new tag
        run: |
          git tag v${{ steps.update_version.outputs.new_version }}
          git push --tags
      - name: Generate changelog
        id: changelog
        run: |
          changelog=$(git log --pretty=format:"- %s" v${{ steps.current_version.outputs.version }}..v${{ steps.update_version.outputs.new_version }})
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: v${{ steps.update_version.outputs.new_version }}
          name: video-grid-merge-v${{ steps.update_version.outputs.new_version }}
          body: |
            Changes in this Release:
            ${{ steps.changelog.outputs.changelog }}

            For full changes, see the [comparison view](${{ github.server_url }}/${{ github.repository }}/compare/v${{ steps.current_version.outputs.version }}..v${{ steps.update_version.outputs.new_version }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
